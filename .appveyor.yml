# Notes:
#   - Minimal appveyor.yml file is an empty file. All sections are optional.
#   - Indent each level of configuration with 2 spaces. Do not use tabs!
#   - All section names are case-sensitive.
#   - Section names should be unique on each level.

#---------------------------------#
#      general configuration      #
#---------------------------------#

# version format
version: 17.1.1.{build}-{branch}

# branches to build
#branches:
  # whitelist
  # only:
    # - temp

  # blacklist
  #except:
    #- gh-pages

# Do not build on tags (GitHub only)
skip_tags: true

#---------------------------------#
#    environment configuration    #
#---------------------------------#

# Operating system (build VM template)
os: Visual Studio 2017

# scripts that are called at very beginning, before repo cloning
init:
- git config --global core.autocrlf input
# clone directory
clone_folder: c:\projects\Bridge

# fetch repository as zip archive
shallow_clone: true                 # default is "false"

# set clone depth
clone_depth: 30                      # clone entire repository history if not defined

# environment variables
environment:
  VisualStudioVersion: 12
  # this is how to set encrypted variable. Go to "Encrypt data" page in account menu to encrypt data.
  #my_secure_var1:
    #secure: FW3tJ3fMncxvs58/ifSP7w==

# build cache to preserve files/folders between builds
cache:
  - packages -> **\packages.config

# scripts that run after cloning repository
install:
#  - ps: (New-Object Net.WebClient).DownloadFile('https://dist.nuget.org/win-x86-commandline/v3.5.0/nuget.exe', 'c:\projects\Bridge\nuget\nuget.exe')
#  - cmd: nuget sources add -Name NuGetV3 -Source  https://api.nuget.org/v3/index.json

#  - cmd: git.exe clone -q --progress -v  --depth 20 --branch=master "https://github.com/bridgedotnet/Frameworks" "c:\projects\Frameworks"
#  - cmd: git.exe clone -q --progress -v  --depth 20 --branch=master "https://github.com/bridgedotnet/Testing" "c:\projects\Testing"

#---------------------------------#
#       build configuration       #
#---------------------------------#

# build platform, i.e. x86, x64, Any CPU. This setting is optional.
platform: Any CPU

# build Configuration, i.e. Debug, Release, etc.
configuration: Release

build:
  # parallel: true                  # enable MSBuild parallel builds
  project: c:\projects\Bridge\Bridge.sln      # path to Visual Studio solution or project

  # MSBuild verbosity level
  verbosity: minimal


# scripts to run before build
before_build:
- appveyor-retry nuget restore "c:\projects\Bridge\.nuget\packages.config" -PackagesDirectory "c:\projects\Bridge\packages" -DisableParallelProcessing
- ps: >-
    # Check if commit message contains labels [skip appveyor client] or [skip ci client] to skip client tests

    IF ($env:SKIP_CLIENT_TESTS -eq $null) {
        write-host "SETUP SKIP_CLIENT_TESTS is unset"
        IF ($env:APPVEYOR_REPO_COMMIT_MESSAGE.ToLower().Contains("[skip appveyor client]")) {
            write-host "SETUP Commit message contains [skip appveyor client]"
            $env:SKIP_CLIENT_TESTS=$true
        }

        IF ($env:APPVEYOR_REPO_COMMIT_MESSAGE.ToLower().Contains("[skip ci client]")) {
            write-host "SETUP Commit message contains [skip ci client]"
            $env:SKIP_CLIENT_TESTS=$true
        }
    } ELSE {
        write-host "SETUP SKIP_CLIENT_TESTS is set to $env:SKIP_CLIENT_TESTS"
    }

    IF ($env:SKIP_CLIENT_TESTS -eq $true) {
        write-host "SETUP Will NOT run client tests as either the skipping labels found (either [skip appveyor client] or [skip ci client]) or set SKIP_CLIENT_TESTS=true"
    } ELSE {
        write-host "SETUP Will run client tests"
    }

    # Check if commit message contains labels [skip appveyor server] or [skip ci server] to skip server tests

    IF ($env:SKIP_SERVER_TESTS -eq $null) {
        write-host "SETUP SKIP_SERVER_TESTS is unset"
        IF ($env:APPVEYOR_REPO_COMMIT_MESSAGE.ToLower().Contains("[skip appveyor server]")) {
            write-host "SETUP Commit message contains [skip appveyor server]"
            $env:SKIP_SERVER_TESTS=$true
        }

        IF ($env:APPVEYOR_REPO_COMMIT_MESSAGE.ToLower().Contains("[skip ci server]")) {
            write-host "SETUP Commit message contains [skip ci server]"
            $env:SKIP_SERVER_TESTS=$true
        }
    } ELSE {
        write-host "SETUP SKIP_SERVER_TESTS is set to $env:SKIP_SERVER_TESTS"
    }

    IF ($env:SKIP_SERVER_TESTS -eq $true) {
        write-host "SETUP Will NOT run server tests as either the skipping labels found (either [skip appveyor server] or [skip ci server]) or set SKIP_SERVER_TESTS=true"
    } ELSE {
        write-host "SETUP Will run server tests"
    }

# scripts to run after build
after_build:

# to run your custom scripts instead of automatic MSBuild
build_script:

# to disable automatic builds
#build: off

# scripts to run before tests
before_test:
  # - echo script1
- ps: >-
    $env:CLIENT_TESTS_EXIT_CODE = 0
 
# scripts to run after tests
after_test:

# to run your custom scripts instead of automatic tests
test_script:
  #- echo This is my custom test script
- ps: >-
    IF ($env:SKIP_SERVER_TESTS -eq $true) {
        write-host "Skipping server tests";
        # This does not work see https://github.com/appveyor/ci/issues/1090
        # So will use ELSE not exit
        # $host.SetShouldExit(0); exit 0;
    } ELSEIF ($env:CLIENT_TESTS_EXIT_CODE -ne 0) {
        write-host "Skipping server tests as CLIENT_TESTS_EXIT_CODE = $env:CLIENT_TESTS_EXIT_CODE"
        $host.SetShouldExit(1);
    } ELSE {
        nunit3-console "c:\projects\Bridge\Compiler\TranslatorTests\bin\Release\Bridge.Translator.Tests.dll"
    }

# to disable automatic tests
# test:
   # assemblies:
    # - builder\translatortests\bin\$(configuration)\bridge.translator.tests.dll


# scripts to run before deployment
before_deploy:

# scripts to run after deployment
after_deploy:

# to run your custom scripts instead of provider deployments
deploy_script:

# to disable deployment
#deploy: off


#---------------------------------#
#        global handlers          #
#---------------------------------#

# on successful build
on_success:
  # - do something

# on build failure
on_failure:
  # - do something

# after build failure or success
on_finish:
- ps: $root = Resolve-Path Compiler\TranslatorTests; [IO.Directory]::GetFiles($root.Path, '*.log', 'AllDirectories') | % { Push-AppveyorArtifact $_ -FileName $_.Substring($root.Path.Length + 1) -DeploymentName TranslatorTestsLog }
# Uncomment the line below if you need Integration Test output
# - ps: $root = Resolve-Path Compiler\TranslatorTests\TestProjects\08\Bridge\output; [IO.Directory]::GetFiles($root.Path, '*.*', 'AllDirectories') | % { Push-AppveyorArtifact $_ -FileName $_.Substring($root.Path.Length + 1) -DeploymentName TranslatorTestsLog }


#---------------------------------#
#         notifications           #
#---------------------------------#

notifications:

  - provider: Slack
    auth_token:
      secure: 2g1as+FdSYJM0dzLEBkosu66Q/9U8ncGWUd7IcAfWXViqG9X7eKMkOt3ai4JRcb+9k+2BW8Aewdt6tp3dOD27SB+rJZzoNeUjA1SCk8nbaM=
    channel: '#bridge-github'
    on_build_status_changed: true
    on_build_success: true
    on_build_failure: true

